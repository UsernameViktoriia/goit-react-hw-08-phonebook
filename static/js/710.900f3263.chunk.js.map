{"version":3,"file":"static/js/710.900f3263.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n  font-size: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  color: #2362df;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #2362df;\n  border-radius: 5px;\n  padding: 5px;\n  font-size: 20px;\n  background: #f4f40033;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  margin-top: 15px;\n  border: 0;\n  border-radius: 5px;\n  background: #4676d7;\n  color: #fff;\n  padding: 8px 16px;\n  font-size: 20px;\n`;\n","import React, { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contactSlice/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addContact({ number, name }));\n    console.log(number, name);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label className=\"input-group\">\n        <span>Name</span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={onChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label className=\"input-group\">\n        <span>Number</span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={onChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 20px;\n  font-size: 30px;\n`;\n\nexport const Button = styled.button`\n  border: 0;\n  border-radius: 5px;\n  background: #4676d7;\n  color: #fff;\n  padding: 8px 16px;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Button } from './ContactItem.styled';\nimport { deleteContact } from '../../redux/contactSlice/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <Item>\n      <span>{contact.name}</span>\n      <span>{contact.number}</span>\n      <Button\n        value={contact.id}\n        onClick={() => {\n          onDeleteContact(contact.id);\n        }}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Contacts = styled.ul`\n  margin-top: 50px;\n  padding-bottom: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-size: 30px;\n  color: #2362df;\n`;\n","import React from 'react';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Contacts } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contactsData.contacts);\n  const isLoading = useSelector(state => state.contactsData.isLoading);\n  const filter = useSelector(state => state.filter.filter);\n  const filterContacts = () => {\n    return (\n      contacts?.filter(contact =>\n        contact?.name?.toLowerCase()?.includes(filter?.trim()?.toLowerCase())\n      ) ?? []\n    );\n  };\n  return (\n    <Contacts>\n      {isLoading\n        ? 'Loading...'\n        : filterContacts().map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n    </Contacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 15px;\n  font-size: 30px;\n  color: #2362df;\n`;\nexport const Input = styled.input`\n  border: 2px solid #2362df;\n  border-radius: 5px;\n  padding: 5px;\n  font-size: 20px;\n  background: #f4f40033;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Label className=\"input-group\">\n        <span>Find contacts by name</span>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(setFilter(e.target.value));\n          }}\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contactSlice/operations';\n// import { useDispatch, useSelector } from 'react-redux';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  //   const { error, contacts, isLoading } = useSelector(\n  //     state => state.contactsData\n  //   );\n\n  //   useEffect(() => {\n  //     dispatch(getContacts());\n  //   }, [dispatch]);\n\n  //   const onDelete = contactId => {\n  //     dispatch(deleteContact(contactId));\n  //   };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1\n        style={{\n          fontSize: 40,\n          color: '#1251cc',\n        }}\n      >\n        Phonebook\n      </h1>\n      <ContactForm />\n      <h2\n        style={{\n          fontSize: 40,\n          color: '#1251cc',\n        }}\n      >\n        Contacts\n      </h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default WithAuthRedirect(ContactsPage, '/sign-in');\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n    const ComponentWithRedirect = (props) => {\n        const user = useSelector(state => state.userData.user);\n        \n        return Boolean(user) ? <Component {...props} /> : <Navigate to={navigateTo} />\n    }\n\n    return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect"],"names":["Form","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","onChange","e","target","value","onSubmit","preventDefault","addContact","console","log","className","type","pattern","title","required","Item","ContactItem","contact","id","onClick","contactId","deleteContact","Contacts","ContactList","contacts","useSelector","state","contactsData","isLoading","filter","toLowerCase","includes","trim","filterContacts","map","Filter","setFilter","Component","navigateTo","props","user","userData","Boolean","to","useEffect","fetchContacts","style","fontSize","color"],"sourceRoot":""}