{"version":3,"file":"static/js/656.d1a6b7e5.chunk.js","mappings":"kQAoFA,MA/EA,YAAoC,IAAdA,EAAa,EAAbA,UACpB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAKMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEdN,GAAY,SAAAO,GAAS,yBAChBA,GADgB,cAElBX,EAAOU,GAFW,GAItB,EAgBKE,EAAQ,WACZR,EAAY,CACVJ,KAAM,GACNC,MAAO,GACPC,SAAU,IAEb,EAED,OACE,kBAAMW,SAvBS,SAAAL,GACfA,EAAEM,iBAEF,IAAMC,EAAY,CAChBd,MAAOE,EAASF,MAChBD,KAAMG,EAASH,KACfE,SAAUC,EAASD,UAErBc,QAAQC,IAAI,cAAeF,GAE3BV,GAASa,EAAAA,EAAAA,IAAOH,IAChBH,GACD,EAWC,WACE,mBAAOO,UAAU,cAAjB,WACE,qCACA,kBACEC,KAAK,OACLpB,KAAK,OACLO,SAAUA,EACVG,MAAOP,EAASH,KAChBqB,UAAQ,QAGZ,mBAAOF,UAAU,cAAjB,WACE,sCACA,kBACEC,KAAK,OACLpB,KAAK,QACLO,SAAUA,EACVG,MAAOP,EAASF,MAChBoB,UAAQ,QAGZ,mBAAOF,UAAU,cAAjB,WACE,yCACA,kBACEC,KAAK,OACLpB,KAAK,WACLO,SAAUA,EACVG,MAAOP,EAASD,SAChBmB,UAAQ,QAIZ,mBAAQD,KAAK,SAASE,SAAUxB,EAAhC,uBAKL,E,UCzDD,MApBA,WACE,OAAmCyB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAV,IAA5C3B,EAAR,EAAQA,UAAW4B,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAEpBC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACHH,GAELC,EAAS,YACV,GAAE,CAACD,EAAMC,KAGR,4BACE,uHACCF,EAAMK,OAAS,IAAK,+DAAuCL,MAC5D,SAAC,EAAD,CAAY5B,UAAWA,MAG5B,C","sources":["components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signUp } from '../../redux/userSlice/operations';\n\nfunction SignUpForm({ isLoading }) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.target;\n\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const finalData = {\n      email: formData.email,\n      name: formData.name,\n      password: formData.password,\n    };\n    console.log('finalData: ', finalData);\n    // onAddProduct(productPart);\n    dispatch(signUp(finalData));\n    reset();\n  };\n\n  const reset = () => {\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label className=\"input-group\">\n        <span>Name:</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={onChange}\n          value={formData.name}\n          required\n        />\n      </label>\n      <label className=\"input-group\">\n        <span>Email:</span>\n        <input\n          type=\"text\"\n          name=\"email\"\n          onChange={onChange}\n          value={formData.email}\n          required\n        />\n      </label>\n      <label className=\"input-group\">\n        <span>Password:</span>\n        <input\n          type=\"text\"\n          name=\"password\"\n          onChange={onChange}\n          value={formData.password}\n          required\n        />\n      </label>\n\n      <button type=\"submit\" disabled={isLoading}>\n        Sign up\n      </button>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import SignUpForm from 'components/SignUpForm/SignUpForm';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SignUpPage() {\n  const { isLoading, error, user } = useSelector(state => state.userData);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) return;\n\n    navigate('/contacts');\n  }, [user, navigate]);\n\n  return (\n    <div>\n      <h1>Зареєструватися</h1>\n      {error.length > 0 && <p>Some error occured... With message {error}</p>}\n      <SignUpForm isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default SignUpPage;\n"],"names":["isLoading","useState","name","email","password","formData","setFormData","dispatch","useDispatch","onChange","e","target","value","prevState","reset","onSubmit","preventDefault","finalData","console","log","signUp","className","type","required","disabled","useSelector","state","userData","error","user","navigate","useNavigate","useEffect","length"],"sourceRoot":""}