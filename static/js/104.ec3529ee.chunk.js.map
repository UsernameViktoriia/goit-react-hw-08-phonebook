{"version":3,"file":"static/js/104.ec3529ee.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","HOC/WithAuthRedirect.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 15px 10px;\n  justify-content: space-around;\n  margin-left: auto;\n  margin-right: auto;\n  background: white;\n  box-shadow: grey 0px 0px 7px 0px;\n  border-radius: 4px;\n`;\n\nexport const LabelSpanStyle = styled.span`\n  display: block;\n  margin-top: 20px;\n  margin-bottom: 8px;\n  font-size: 30px;\n  font-weight: 500;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  color: #2362df;\n`;\n\nexport const Input = styled.input`\n  background: rgba(255, 255, 255, 0.08);\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  padding: 10px 12px;\n  width: 390px;\n  height: 28px;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 24px;\n`;\n","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { Form, Label, Input, LabelSpanStyle } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactSlice/operations';\nimport { Button } from 'components/Button/Button';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { contacts } = useSelector(state => state.contactsData);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        cont => cont.name.toLowerCase().trim() === name.toLowerCase().trim()\n      )\n    ) {\n      Notiflix.Notify.info(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ number, name }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label className=\"input-group\">\n        <LabelSpanStyle>Name</LabelSpanStyle>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={onChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label className=\"input-group\">\n        <LabelSpanStyle>Number</LabelSpanStyle>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={onChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  font-size: 30px;\n  background-color: rgb(250, 250, 250);\n  border-radius: 10px;\n  border: 1px solid rgb(242, 242, 242);\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  border: 0;\n  border-radius: 5px;\n  background: #4676d7;\n  color: #fff;\n  padding: 8px 16px;\n  font-size: 20px;\n  &:hover {\n    background-color: #3f51b5;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item } from './ContactItem.styled';\nimport { deleteContact } from '../../redux/contactSlice/operations';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <Item>\n      <span>{contact.name}</span>\n      <span>{contact.number}</span>\n      <Button\n        value={contact.id}\n        onClick={() => {\n          onDeleteContact(contact.id);\n        }}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Contacts = styled.ul`\n  margin-top: 50px;\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-size: 30px;\n  color: #2362df;\n`;\n","import React from 'react';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Contacts } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contactsData.contacts);\n  const isLoading = useSelector(state => state.contactsData.isLoading);\n  const filter = useSelector(state => state.filter.filter);\n  const filterContacts = () => {\n    return (\n      contacts?.filter(contact =>\n        contact?.name?.toLowerCase()?.includes(filter?.trim()?.toLowerCase())\n      ) ?? []\n    );\n  };\n  return (\n    <Contacts>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        filterContacts().map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))\n      )}\n    </Contacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 15px;\n  font-size: 35px;\n  font-weight: 500;\n  color: #2362df;\n`;\nexport const Input = styled.input`\n  background: rgba(255, 255, 255, 0.08);\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  padding: 10px 12px;\n  width: 390px;\n  height: 28px;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 24px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Label className=\"input-group\">\n        <span>Find contacts by name</span>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(setFilter(e.target.value));\n          }}\n          value={filter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n    </div>\n  );\n};\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n    const ComponentWithRedirect = (props) => {\n        const user = useSelector(state => state.userData.user);\n        \n        return Boolean(user) ? <Component {...props} /> : <Navigate to={navigateTo} />\n    }\n\n    return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const TitlePhonebook = styled.h2`\n  margin: 30px;\n  font-size: 45px;\n  text-align: center;\n`;\nexport const TitleContacts = styled.h2`\n  margin: 30px;\n  font-size: 45px;\n  text-align: center;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contactSlice/operations';\nimport {\n  ContactsWrapper,\n  TitleContacts,\n  TitlePhonebook,\n} from './ContactsPage.styled';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsWrapper>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <ContactForm />\n      <TitleContacts>Contacts</TitleContacts>\n      <Filter />\n      <ContactList />\n    </ContactsWrapper>\n  );\n}\n\nexport default WithAuthRedirect(ContactsPage, '/login');\n"],"names":["Form","styled","LabelSpanStyle","Label","Input","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","contactsData","dispatch","useDispatch","onChange","e","target","value","onSubmit","preventDefault","find","cont","toLowerCase","trim","Notiflix","addContact","className","type","pattern","title","required","Button","Item","ContactItem","contact","id","onClick","contactId","deleteContact","Contacts","ContactList","isLoading","filter","Loader","includes","filterContacts","map","Filter","setFilter","Component","navigateTo","props","user","userData","Boolean","to","ContactsWrapper","TitlePhonebook","TitleContacts","WithAuthRedirect","useEffect","fetchContacts"],"sourceRoot":""}